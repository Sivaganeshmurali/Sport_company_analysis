# -*- coding: utf-8 -*-
"""Sport_analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Va4Mxd7zhMiDMsDRmrcuojhR_mYmWyh6
"""

import numpy as np
import pandas as pd

data=pd.read_csv('/content/Laliga.csv')

data.head()

data.info()

data.describe()

data.shape

data.columns

# Strip extra spaces and ensure consistent column names
data.columns = data.columns.str.strip()

# Retry replacing dashes and converting numeric columns


data.replace('-', '0', inplace=True)
numeric_columns = ["Points", "GamesPlayed", "GamesWon", "GamesDrawn", "GamesLost",
                   "GoalsFor", "GoalsAgainst", "Champion", "Runner-up", "Third",
                   "Fourth", "Fifth", "Sixth"]
for col in numeric_columns:
    if col in data.columns:
        data[col] = pd.to_numeric(data[col], errors='coerce')
data.head(62)

#  teams which have started playing between 1930-1980


data["Debut_Year"] = data["Debut"].str.extract(r'(\d{4})').astype(float)
teams_1930_1980 = data[(data["Debut_Year"] >= 1930) & (data["Debut_Year"] <= 1980)][["Team", "Debut_Year"]]
print("\nTeams that started playing between 1930 and 1980:")
print(teams_1930_1980)

# Top 5 in terms of points


data["Points"] = pd.to_numeric(data["Points"], errors='coerce')
top_5_teams = data.sort_values(by="Points", ascending=False)[["Team", "Points"]].head(5)
print("\nTop 5 teams based on Points:")
print(top_5_teams)

# find the team which has maximum and minimum goal difference.


def Goal_diff_count(data):
    data["GoalsFor"] = pd.to_numeric(data["GoalsFor"], errors='coerce')
    data["GoalsAgainst"] = pd.to_numeric(data["GoalsAgainst"], errors='coerce')
    data["Goal_Difference"] = data["GoalsFor"] - data["GoalsAgainst"]
    max_team = data.loc[data["Goal_Difference"].idxmax(), ["Team", "Goal_Difference"]]
    min_team = data.loc[data["Goal_Difference"].idxmin(), ["Team", "Goal_Difference"]]
    print("\nAll Teams with Goal Differences:")
    print(data[["Team", "Goal_Difference"]])
    print(f"\nTeam with Maximum Goal Difference: {max_team.Team} ({max_team.Goal_Difference})")
    print(f"Team with Minimum Goal Difference: {min_team.Team} ({min_team.Goal_Difference})")

    return data[["Team", "Goal_Difference"]]
Goal_diff_count(data)

#Create a new column with name â€œWinning Percentâ€ and append it to the data set

data["GamesWon"] = pd.to_numeric(data["GamesWon"], errors='coerce')
data["GamesPlayed"] = pd.to_numeric(data["GamesPlayed"], errors='coerce')
data["Winning Percent"] = (data["GamesWon"] / data["GamesPlayed"]) * 100
data["Winning Percent"].fillna(0, inplace=True)
data["Winning Percent"] = data["Winning Percent"].apply(lambda x: 0 if x == float('inf') else x)
top_5_winning_teams = data.sort_values(by="Winning Percent", ascending=False)[["Team", "Winning Percent"]].head()
print("\nTop 5 Teams with Highest Winning Percentage:")
print(top_5_winning_teams)

#Group teams based on their â€œBest positionâ€ and print the sum of their points for all positions

data["BestPosition"] = pd.to_numeric(data["BestPosition"], errors='coerce')
data["Points"] = pd.to_numeric(data["Points"], errors='coerce')
best_position_points = data.groupby("BestPosition")["Points"].sum().reset_index()
print("\nSum of Points for Each Best Position:")
print(best_position_points)
